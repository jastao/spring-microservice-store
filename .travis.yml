
# Travis CI Java documentation can be found in:
# https://docs.travis-ci.com/user/languages/java/

# Each job in Travis CI has several steps:
# https://docs.travis-ci.com/user/job-lifecycle/
# The 'language: java' directive sets up sane defaults to test common java applications
# Enable the 'defaults' to test java application
language: java

# Specify the JDK version used
jdk:
  - openjdk11

# Specify the docker service for building images
services:
  - docker

# Dont run the default install step
# ./mvnw install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
install: true

#
# env:
#   global:
#     secure: CONFIG_SERVER_IMAGE_NAME
#     secure: REGISTRY_SERVICE_IMAGE_NAME
#     secure: EDGE_SERVICE_IMAGE_NAME
#     secure: INVENTORY_SERVICE_IMAGE_NAME
#     secure: PRODUCT_CATALOG_SERVICE_IMAGE_NAME
#     secure: DOCKER_USER
#     secure: DOCKER_PASSWORD
#
env:
  global:
    - secure: Gn/Fq7/I6WpPqkTDG28RrMlgPsN142+2Ax0HNv9Rd8pxl1+GQrMwzYNPjJqjhVzgNzf+1txo155xK9WYrY9ok49UUcaPPVrnfodktrFb8Mg7rpFejL6hZa2qrZhlUBn4SsKppIlm7NxaLWxkITadq21TI6adYfxAGvDlR3nNg2+sfjZECHFBTAZfA1jqJhMCuO7HWGnyiZy9XzpdIBf5/9qG99R4N8Q8m3Tot3os05sB3dXdZX/N7CUIXKMmElc9TMElpyxLh/dgWcHhG3GbCFzEyAuy3i5kqmwCq9fUnSh0LgassizoS13oof4NlZxe5ac0maEGZU+HbVQ65j/VM26yfPUAG9c+DR43MyiKVbxx7JAOkVdU1KfD874Pad5Eq6hOITieGGscuFkLZ9C7IIujh0sFkSRWWYvKw5fEHKkuznpl9kqaY78yug3tSjz5+Ay92SIU46YK3quzMHzrDyZiOC+OXPRrMnMnjfQ0lifW0NHmApicTOgNhIrKVRwUVrPRVkrOKIyh6Zac1BtP4M+jXTbp/gXlx/WXmlWbiEQ369amVNl33agceGCANWnR7gHTYiqoX06qqRKXM2TRu7owMf/9yS12kYRA+N3HETMo0ikstNFEzepqonn2VdBeEcio35qMf2pFDc/fZximRlX0hQ7dAKvX4owxJ0C+WQ4=
    - secure: HvQjKBjcM6qz0E+o9bHfkYRflGqodx087oYKEV9vbJ3SnIGsEq2P49zO3+yYh0orke7oGUtz9nAjrnbkC10aq2hvgkh1uqzQO8fXhinUUqP+6PuWua+sF3tyLlSBloWrFTKBixCLqFTlFp8DLRgwbHouFgCyVxM9MjMWrWKMZzVAj9RYQxNJ7m7rMe1xRwOJrCX76bZU8Pb8uCvNEcJs42B4b5bRbNCiIs3GrJcY0A7IcmJScRnuOfLT2haoNk8DJa+RgMznTmg9T1fyQi5Cd521VLPPUhJS4mXOO1pmeiCI3OW7SLS7O/CwKccJEX7A2nLe2pu1xp60/0MKtPJqgwQTk3TVGTT8RIoD8Don+Z0HsWfq1YA/yHczgY2aAkPcdgDZ44cIwPDXHcU2iue0HssSdirmhd/TXxK/OoFbytlR+adyruc2GAUCyZXvV5JtkktzI3EsKS2Pt2n4agtUE4gpAERH0E4JnXn+cdVS6hHdnZaL2OwOpzW46qzsKdcVfBpaV9nTzg0rM25oIQd+7P5GwFyyR/ts9gT2RbEnzw+JL+0ibDvim/QK1jDwJITvO+sdKt51inaD5hjUQhnlkGlsgF+6MwF8On3TcMw1DZTFlyKsIvHpw6zx1bkSd7TpkGkded4Y8r9Z9Vx+ufDmrWMipMOQAKnM23+al6KwQjw=
    - secure: nGRB8wEDGpIiYA/FsBJpvapGCl7ofboVmjVMrXl6OxNhr4Xb0fnmtxWSz5T5CVgo2WUF7YYR6U85aU8jFFekbkc+0Dp9X1AkPdfqBLtWmLOFG7lA2mk+u2leMhQmtVsjHt+f1xAEP73SeylZgalECWfk76l91GDjlxFd7IatVOg68h2lSc+FE2tiDK/apsg6iZb3g13qy8iffFMLy7wLmjtyIClajY2a15flTqzyCAB34DaeCl/EkebJkeVn8M4ZA4rrNhLW6KlqxdHK2zBRp+fQyCUSrdOHmXV7G3hOSpjZ1R1ScGCWXhbNxx5preur+aVmhIfkaOAGKG0rygcchFUti2BezVebRQfUwLLP0w4hTjpESg0Ne75u8ICRNxg5F6LKxZH6y/hV9v9TksUKatOrSbfLNy8ev8gotHJCQjckuSiRvCSuTRNlIiCwZ4BlatOaTwPKkVbvJUYWf2dpsJobCfjsnfkHq2EZQCMQ7MT8YYViL4Of8U6XkFc5Dj6BHG3l9Nw5XnBjsXCUX/rrCyJoAktiPVDXaP2I/KCnsLkgsCqAvy3qmeVYfLGWT99jq0XY1F5HuL8PkW9g1wclYfI+F2JQIdgguVkUOSMtY4pSTvCJEfQUX31uZFvG6vp+8RcO1NpxVzgzLVNZQ30u371mss16Ywe7uaw6X3pfXWg=
    - secure: h4YvizC7TYMcJLUmWHHpWzpAhwkXyZeE8TI7P801zLeKO8XuoAnl23/MoRYVtI7qoc1mg5TOW+jdMv6EJtnaTSvWw7T/DrriG7cAcl1hsFgqTrf68M0kARWDoW9p64ZEMcgygedxKs/huWjS+bZjnlbeCLkJgXFBesu548pnhBXi3KgPfB/bpFq/ogbImvNKphOIUzDtE1TQ6W3ccKC7DknYIJm0JMHAJLYyJ1tBhVITk+CbpePwlHmnuqxgssN3sws+GE81+SvoQVVZWyGcLSvjRXCRcckfszufFiEB2MS9utfnEiF8VYPmEFbdUevjgcxXzP8N5AgShUeIu7jFJzWAaYAygZumjB6mVyafimjQs+M8oDYICxx3zn+HBdJ1vpx3nU8W5g2pN1Cvg8VUjGvtUOKnPdc/4JlSRVbzTN8pjd/K2GhVQZH1joMqeayRHg5SONO3G1rNOXSKt6PFdHQWzLLkDVL4WmuJl4yeSwwhEbCVyUheVogTIuJqnLp2ofsHFc3lYKcQrVJDCttnbp3zvK/ryrnsJ7Z3WinMkMTWqSuVgWUsmOTX1SdrcJHOTye5P+Lp6OQkQuoUO7OAToQoJ2WJ8FT7mzhlhXcKZPi2tf4GWp1jRE3pjRrUCaf2+HzjZBd4JhzZC8bBGIK4Ert//NcQX5c3Fz3a+V5ZUk4=
    - secure: KJey/OQPjwhqatwsxVaOzpz/yewspZXZ+bhiVo9Q4cJbZDcmg6GQZv+N6VQLq9fO7gcgH9YpCIzMalzc9Nsda2zYdbv8HDEHdSY5h3swyriZhpIhdkwgpobT5AUiHla5odlnIVpnKn6dUlKES+J0KpzHK53HAmmIQUoeT2FsaBxjlQc2QOZze5KTWbh9p1gHI5V6S3Wqi5VYB6OsFdRpJ1RBw0vmkw7Amt8jqGXSB2OsWX321c0K4b7R724n2PuPGXOqvGYPdlVkcSRNiRP6KJDr65zn7z8h+ClK2odRvHQFOhpQbaNg4OkajTI9VMBu6JSNFFpfLft8bKPjUX4fZk1gxfUzArJOkmNpGL2OHhzMcp+JsJf8iN9KXVHUT8p6qwyzOxV+LBGRMEg5ExneLMFo/VwC9WEOv+k3KkODDv7d07ujGHyEjqN+A2Aoyr+EtlicMdyg5qJDFcbbj/+fyRdLazLRkkHXKqlbMDc6US+LIg6xe32XGv2YjjoP41jmsw+YZ1zwuuzEjTnJI/JzMxvo8h6qSFpe4aCdesG5FTuFqkOTBt6rUnqiPmsgiry2Jmx4jKi6N5Mlu0Ca10kyeOvKLxJbg1SKluizVZMAVkFAqp0t5tICzxYk95wXAbqyZeej5SX7offM8jxC6Kho9pfFf+Mlx3jdSqsH2Qh7sew=
    - secure: TDZT15UNbsJXfLSqx9IiLUvzWlaPc/M5EaMpy1nYaD9CbLpKKRme7GXRAiaR5/GIrvm0QMlyExpRDOpHJj8aTF3YADa7DiVXQh8oLmcBQwpQvDCetfZXmKLe7mrp31zBDZBOHbDArpf7AfoAL68flKFNpbAVPtR5GUoBgaf4MhuCMUyIunlTZbs+DiqO10cetqM7d9TR5n8RgOEw4DefzDkUllqwWRycczvv0HqKfvlMgia1d1Drq2miW7wbLoPUxcNUiYjkn3Swszu1XF/5Pi1aXMap8OvLWxHDoLl4ERR5GylJPpTTKZ7xTlqTo2NYKisOm4AcvDp3FLCXRMv+q8lvv5rWGOx5njDuXv+TcFi2iqcFncWYWpHMg707DRQ3fuQ6U9v9mim5wHVf0yCC3ySYWpoNiuA39M8AZNZK9l9t+r8s2AC4kU0rvTROhQ0XbPm/mbtiT1ECabwnlSoH2+Hp+DQXOovzx74zzUJMY7HiqTHxOcTaDCIvq1k9Gt86dAfSBktFBr8GykQ7b6VqtmmKuz3xXm9wGYE74UJklGrTN1Nhp8xbNzf/NbCk62BBxeR0ntqTG/kDUGexjICj4a200+iF81qvg2ZXj/24HbjNhcgTQBqR7M95vIVD2+IvT5bohQWvtId+qlL0xvtHSkFxemxY2TAbJITZZaYYU7Q=
    - secure: D374z6kuAzcnWcCegpfjZRegnUo9DpVCm28s6RSVwD353FiGCRfFGGw2VKPuRuLs+Khil+2SvPzDb9XxugrdT+OYOvQQG+9sjwTFd5o5MVcDbTGuaq/x3IJnF3fkJb/T5GWapLoDN7nMNLli8PKg8z0196GoEyr5/9Y3aM3rOP4nbwWdNXc1Z1USv97gZFiubFW7uyxQr3+0EpqQnrseGpPRqE01byDnImKkjfdH4JZbKwOiLgMm+jPK500EgJqmXqIOBQG/TPACrrzK7DMsj3vNP+wqbwY9z/k69PqLeirkBCNHvPsFKv+WbY2PebUw2U9C4gr3iu3255HGf8WfqB9y9bF2OrZsBIv+YLKuc2xVl8JOdk1pDTd0CEj6VamhXSu/ukUHOonv6+gzNqQHgxNv1srsPKTFJUjDPD2gZLGDG9BneMGRI9OSZDMrLsuYle5faqABU37AXxxd0YIcJXgdGFewR8ygTlXwocd45Pc97UhH4axsdlEu79hfDam8QLPPSVxqGMERN0bHQW98iCnrXc0LyLpfA+yTG0MTb1jq+Dmgkx6surtv8noqytuTsSG3lhBniqHrFUgWSaJX84+t+B3rZEurBCjs+hSp+UiyvOaLEpDx3j7gfyfRfbfsz/GExmPU89qJod5diEo5QoZXbZfbrRlZI4xay7ej6vg=

# Keep the local maven repository between various runs to speed up the build process
cache:
  directories:
    - $HOME/.m2

# Change the mvnw permission so the build can use it
before_install:
  - chmod +x mvnw
  - docker pull openjdk:11-jre-slim

# Use this custom install
script:
  ./mvnw clean package -Dmaven.test.skip=true

# Create the docker images for core services and push them to Dockerhub repository
after_success:
  - export COMMIT=${TRAVIS_COMMIT::7}
  - export TAG=`if [ ! -z "$TRAVIS_TAG" ]; then echo "$TRAVIS_TAG"; else echo "$TRAVIS_BRANCH--$COMMIT"; fi`
  - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
  - docker-compose build --pull
  - docker tag $CONFIG_SERVER_IMAGE_NAME:latest $CONFIG_SERVER_IMAGE_NAME:$TAG
  - docker push $CONFIG_SERVER_IMAGE_NAME:$TAG
  - docker tag $REGISTRY_SERVICE_IMAGE_NAME:latest $REGISTRY_SERVICE_IMAGE_NAME:$TAG
  - docker push $REGISTRY_SERVICE_IMAGE_NAME:$TAG
  - docker tag $EDGE_SERVICE_IMAGE_NAME:latest $EDGE_SERVICE_IMAGE_NAME:$TAG
  - docker push $EDGE_SERVICE_IMAGE_NAME:$TAG
  - docker tag $INVENTORY_SERVICE_IMAGE_NAME:latest $INVENTORY_SERVICE_IMAGE_NAME:$TAG
  - docker push $INVENTORY_SERVICE_IMAGE_NAME:$TAG
  - docker tag $PRODUCT_CATALOG_SERVICE_IMAGE_NAME:latest $PRODUCT_CATALOG_SERVICE_IMAGE_NAME:$TAG
  - docker push $PRODUCT_CATALOG_SERVICE_IMAGE_NAME:$TAG